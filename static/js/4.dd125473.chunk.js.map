{"version":3,"sources":["pages/login/Login.module.css","commons/folrmControls/FormControls.module.css","utils/validators.js","commons/folrmControls/FormControls.jsx","commons/folrmControls/CreatorField.jsx","pages/login/components/LoginForm.jsx","pages/login/Login.jsx","pages/login/LoginContainer.jsx"],"names":["module","exports","count","required","value","trim","length","undefined","email","test","Input","meta","input","props","hasError","touched","error","hasErrorAlert","hasSuccess","className","style","root","itemContainer","item","itemError","itemSuccess","icon","iconError","faExclamationCircle","iconSuccess","faCheckCircle","CheckBox","itemCheckBox","container","containerLabel","type","checkmark","maxLength","CreatorField","placeholder","name","validate","component","Field","getValidator","getComponent","validators","map","elem","LoginForm","reduxForm","form","onSubmit","handleSubmit","alertError","submitBtnContainer","submitBtn","Login","handlerSubmit","isAuth","to","LoginWrapperContainer","memo","loginData","login","LoginContainer","compose","connect","state","authData","getAuthData","getIsAuth","logout"],"mappings":"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","file":"static/js/4.dd125473.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__vVaDu\",\"form\":\"Login_form__32AuC\",\"submitBtnContainer\":\"Login_submitBtnContainer__2ZjpF\",\"submitBtn\":\"Login_submitBtn__3gc6S\",\"alertError\":\"Login_alertError__en4m9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FormControls_root__1W24t\",\"itemContainer\":\"FormControls_itemContainer__rh1sZ\",\"item\":\"FormControls_item__196bV\",\"itemError\":\"FormControls_itemError__mhRQU\",\"itemSuccess\":\"FormControls_itemSuccess__1O2Ts\",\"icon\":\"FormControls_icon__2Kf_H\",\"iconSuccess\":\"FormControls_iconSuccess__3Hjgg\",\"iconError\":\"FormControls_iconError__2ToFo\",\"error\":\"FormControls_error__leXmC\",\"itemCheckBox\":\"FormControls_itemCheckBox__3Hxx4\",\"container\":\"FormControls_container__2Buaw\",\"containerLabel\":\"FormControls_containerLabel__3UrP3\",\"checkmark\":\"FormControls_checkmark__2togo\"};","\r\nexport const creatorMaxLength = (count) => (value) => !value || value.length > count ? `max ${count} symbol` :undefined\r\n\r\nexport const required = (value) => !value || !value.trim().length ? 'required' : undefined\r\n\r\nexport const email = (value) => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined","// Root\r\nimport React from \"react\"\r\n// Style\r\nimport style from \"./FormControls.module.css\"\r\n// Fontawesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamationCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport const Input = ({meta, input, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    const hasErrorAlert = meta.touched && meta.error && meta.error.trim().length !== 0\r\n    const hasSuccess = meta.touched && !meta.error\r\n\r\n    return(\r\n       <div className={style.root}>\r\n           <div className={style.itemContainer}>\r\n               <input\r\n                   {...input} {...props}\r\n                   className={`${style.item} ${hasError ? style.itemError : ''} ${hasSuccess ? style.itemSuccess : ''}`}\r\n               />\r\n               {\r\n                   hasError && <FontAwesomeIcon className={`${style.icon} ${style.iconError}`} icon={faExclamationCircle} />\r\n               }\r\n               {\r\n                   hasSuccess && <FontAwesomeIcon className={`${style.icon} ${style.iconSuccess}`} icon={faCheckCircle} />\r\n               }\r\n           </div>\r\n           {\r\n               hasErrorAlert && <div className={style.error}>{meta.error}</div>\r\n           }\r\n       </div>\r\n    )\r\n}\r\n\r\nexport const CheckBox = ({meta, input, ...props}) => {\r\n    return(\r\n        <div className={style.itemCheckBox}>\r\n            <div className={style.itemContainer}>\r\n                <label className={style.container}>\r\n                    <span className={style.containerLabel}>Remember My</span>\r\n                    <input\r\n                        {...input} {...props}\r\n                        type={'checkbox'}\r\n                        className={`${style.itemCheckBox}`}\r\n                    />\r\n                    <span className={style.checkmark}/>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// Root\r\nimport React from \"react\"\r\nimport {Field} from \"redux-form\";\r\nimport { creatorMaxLength, email, required } from \"../../utils/validators\"\r\n\r\n// Components\r\nimport  { Input, CheckBox } from \"../folrmControls/FormControls\"\r\n\r\nconst maxLength = creatorMaxLength(50)\r\n\r\nexport const CreatorField = ({placeholder, name, validate = [], component, type = 'text'}) => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                type={type}\r\n                name={name}\r\n                validate={getValidator(validate)}\r\n                component={getComponent(component)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst getValidator = (validators) => {\r\n    return validators.map(elem => {\r\n        switch (elem) {\r\n            case 'maxLength': return maxLength\r\n            case 'email': return email\r\n            case 'required': return required\r\n            default: return\r\n        }\r\n    })\r\n}\r\n\r\nconst getComponent = (component) => {\r\n    switch (component) {\r\n        case 'input': return Input\r\n        case 'check-box': return CheckBox\r\n        default: return\r\n    }\r\n}\r\n","// Root\r\nimport React from \"react\"\r\nimport { reduxForm } from \"redux-form\"\r\n// Style\r\nimport style from \"../Login.module.css\"\r\n// Components\r\nimport { CreatorField } from \"../../../commons/folrmControls/CreatorField\"\r\n\r\n\r\nconst LoginFormContainer = (props) => {\r\n    return (\r\n        <form className={style.form} onSubmit={props.handleSubmit}>\r\n            { props.error && props.error.length && <div className={style.alertError}>{props.error}</div> }\r\n            <CreatorField placeholder='email' name='email' component='input' validate={['required', 'maxLength', 'email']} />\r\n            <CreatorField placeholder='password' type='password' name='password' component='input' validate={['required', 'maxLength']} />\r\n            <CreatorField name='rememberMy' component='check-box' />\r\n            <div className={style.submitBtnContainer}>\r\n                <button className={style.submitBtn}>Log In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport const LoginForm = reduxForm({form: 'login'})(LoginFormContainer)\r\n","// Root\r\nimport React from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\n// Style\r\nimport style from \"./Login.module.css\"\r\n// Components\r\nimport { LoginForm } from \"./components/LoginForm\";\r\n\r\n\r\nexport const Login = ({handlerSubmit, isAuth}) => {\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div className={style.root}>\r\n            <h1>Log In</h1>\r\n            <LoginForm onSubmit={handlerSubmit} />\r\n        </div>\r\n    )\r\n}\r\n","// Root\r\nimport React, { memo } from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { compose } from \"redux\"\r\n// Reducer\r\nimport { login, logout } from \"../../reducer/auth-reducer\"\r\n// Selector\r\nimport {  getAuthData, getIsAuth } from \"../../selectors/auth-selector\"\r\n// Components\r\nimport { Login } from \"./Login\"\r\n\r\n\r\nconst LoginWrapperContainer =  memo((props) =>{\r\n    const handlerSubmit = (loginData) => props.login(loginData)\r\n\r\n    return <Login {...props} handlerSubmit={handlerSubmit} />\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authData: getAuthData(state),\r\n    isAuth: getIsAuth(state),\r\n})\r\n\r\nconst LoginContainer = compose(\r\n    connect(mapStateToProps, {login, logout})\r\n)(LoginWrapperContainer)\r\n\r\nexport default LoginContainer"],"sourceRoot":""}