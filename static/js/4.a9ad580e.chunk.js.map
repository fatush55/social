{"version":3,"sources":["pages/login/Login.module.css","pages/login/components/LoginForm.jsx","pages/login/Login.jsx","pages/login/LoginContainer.jsx"],"names":["module","exports","LoginForm","reduxForm","form","props","className","style","onSubmit","handleSubmit","error","length","alertError","CreatorField","placeholder","name","component","validate","type","text","submitBtnContainer","submitBtn","Login","handlerSubmit","isAuth","to","root","LoginWrapperContainer","memo","loginData","login","LoginContainer","compose","connect","state","authData","getAuthData","getIsAuth","logout"],"mappings":"6EACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,mBAAqB,kCAAkC,UAAY,yBAAyB,WAAa,4B,qICuBpKC,EAAYC,YAAU,CAACC,KAAM,SAAjBD,EAfE,SAACE,GACxB,OACI,0BAAMC,UAAWC,IAAMH,KAAMI,SAAUH,EAAMI,cACvCJ,EAAMK,OAASL,EAAMK,MAAMC,QAAU,yBAAKL,UAAWC,IAAMK,YAAaP,EAAMK,OAChF,kBAACG,EAAA,EAAD,CAAcC,YAAY,QAAQC,KAAK,QAAQC,UAAU,QAAQC,SAAU,CAAC,WAAY,YAAa,WACrG,kBAACJ,EAAA,EAAD,CAAcC,YAAY,WAAWI,KAAK,WAAWH,KAAK,WAAWC,UAAU,QAAQC,SAAU,CAAC,WAAY,eAC9G,kBAACJ,EAAA,EAAD,CAAcE,KAAK,aAAaC,UAAU,YAAYG,KAAK,gBAC3D,yBAAKb,UAAWC,IAAMa,oBAClB,4BAAQd,UAAWC,IAAMc,WAAzB,eCRHC,EAAQ,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,cACnB,OAD8C,EAAZC,OAEvB,kBAAC,IAAD,CAAUC,GAAG,aAIpB,yBAAKnB,UAAWC,IAAMmB,MAClB,sCACA,kBAACxB,EAAD,CAAWM,SAAUe,MCL3BI,EAAyBC,gBAAK,SAACvB,GAGjC,OAAO,kBAAC,EAAD,iBAAWA,EAAX,CAAkBkB,cAFH,SAACM,GAAD,OAAexB,EAAMyB,MAAMD,UAU/CE,EAAiBC,YACnBC,aANoB,SAACC,GAAD,MAAY,CAChCC,SAAUC,YAAYF,GACtBV,OAAQa,YAAUH,MAIO,CAACJ,UAAOQ,aADdN,CAErBL,GAEaI","file":"static/js/4.a9ad580e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__vVaDu\",\"form\":\"Login_form__32AuC\",\"submitBtnContainer\":\"Login_submitBtnContainer__2ZjpF\",\"submitBtn\":\"Login_submitBtn__3gc6S\",\"alertError\":\"Login_alertError__en4m9\"};","// Root\r\nimport React from \"react\"\r\nimport { reduxForm } from \"redux-form\"\r\n// Style\r\nimport style from \"../Login.module.css\"\r\n// Components\r\nimport { CreatorField } from \"../../../commons/folrmControls/CreatorField\"\r\n\r\n\r\nconst LoginFormContainer = (props) => {\r\n    return (\r\n        <form className={style.form} onSubmit={props.handleSubmit}>\r\n            { props.error && props.error.length && <div className={style.alertError}>{props.error}</div> }\r\n            <CreatorField placeholder='email' name='email' component='input' validate={['required', 'maxLength', 'email']} />\r\n            <CreatorField placeholder='password' type='password' name='password' component='input' validate={['required', 'maxLength']} />\r\n            <CreatorField name='rememberMy' component='check-box' text='Remember My' />\r\n            <div className={style.submitBtnContainer}>\r\n                <button className={style.submitBtn}>Log In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport const LoginForm = reduxForm({form: 'login'})(LoginFormContainer)\r\n","// Root\r\nimport React from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\n// Style\r\nimport style from \"./Login.module.css\"\r\n// Components\r\nimport { LoginForm } from \"./components/LoginForm\";\r\n\r\n\r\nexport const Login = ({handlerSubmit, isAuth}) => {\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div className={style.root}>\r\n            <h1>Log In</h1>\r\n            <LoginForm onSubmit={handlerSubmit} />\r\n        </div>\r\n    )\r\n}\r\n","// Root\r\nimport React, { memo } from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { compose } from \"redux\"\r\n// Reducer\r\nimport { login, logout } from \"../../reducer/auth-reducer\"\r\n// Selector\r\nimport {  getAuthData, getIsAuth } from \"../../selectors/auth-selector\"\r\n// Components\r\nimport { Login } from \"./Login\"\r\n\r\n\r\nconst LoginWrapperContainer =  memo((props) =>{\r\n    const handlerSubmit = (loginData) => props.login(loginData)\r\n\r\n    return <Login {...props} handlerSubmit={handlerSubmit} />\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authData: getAuthData(state),\r\n    isAuth: getIsAuth(state),\r\n})\r\n\r\nconst LoginContainer = compose(\r\n    connect(mapStateToProps, {login, logout})\r\n)(LoginWrapperContainer)\r\n\r\nexport default LoginContainer"],"sourceRoot":""}